Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

==============================================================================

Section Cross References

    glcd_scroll.o(i.append_char) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.append_char) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayChar) for GLCD_DisplayChar
    glcd_scroll.o(i.append_char) refers to glcd_scroll.o(i.last_line) for last_line
    glcd_scroll.o(i.append_char) refers to glcd_scroll.o(.data) for last_col_cahche
    glcd_scroll.o(i.append_char) refers to glcd_scroll.o(.bss) for chache
    glcd_scroll.o(i.init_scroll) refers to glcd_spi_lpc1700.o(i.GLCD_Init) for GLCD_Init
    glcd_scroll.o(i.init_scroll) refers to glcd_spi_lpc1700.o(i.GLCD_Clear) for GLCD_Clear
    glcd_scroll.o(i.init_scroll) refers to glcd_spi_lpc1700.o(i.GLCD_SetBackColor) for GLCD_SetBackColor
    glcd_scroll.o(i.init_scroll) refers to glcd_spi_lpc1700.o(i.GLCD_SetTextColor) for GLCD_SetTextColor
    glcd_scroll.o(i.init_scroll) refers to glcd_scroll.o(.data) for cache_start
    glcd_scroll.o(i.joyStickBusyWaitingMonitor) refers to glcd_scroll.o(i.moveUp) for moveUp
    glcd_scroll.o(i.joyStickBusyWaitingMonitor) refers to glcd_scroll.o(i.moveDown) for moveDown
    glcd_scroll.o(i.joyStickBusyWaitingMonitor) refers to glcd_scroll.o(i.moveFirst) for moveFirst
    glcd_scroll.o(i.joyStickBusyWaitingMonitor) refers to glcd_scroll.o(i.moveLast) for moveLast
    glcd_scroll.o(i.last_line) refers to glcd_scroll.o(.data) for cache_start
    glcd_scroll.o(i.last_window_line) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.moveDown) refers to glcd_scroll.o(i.last_line) for last_line
    glcd_scroll.o(i.moveDown) refers to glcd_scroll.o(i.last_window_line) for last_window_line
    glcd_scroll.o(i.moveDown) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.moveDown) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.moveFirst) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.moveFirst) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.moveLast) refers to glcd_scroll.o(i.last_line) for last_line
    glcd_scroll.o(i.moveLast) refers to glcd_scroll.o(i.last_window_line) for last_window_line
    glcd_scroll.o(i.moveLast) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.moveLast) refers to glcd_scroll.o(.data) for cache_size
    glcd_scroll.o(i.moveUp) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.moveUp) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.print_string) refers to glcd_scroll.o(i.print_text) for print_text
    glcd_scroll.o(i.print_text) refers to glcd_scroll.o(i.append_char) for append_char
    glcd_scroll.o(i.refresh_lcd) refers to glcd_spi_lpc1700.o(i.GLCD_Clear) for GLCD_Clear
    glcd_scroll.o(i.refresh_lcd) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayString) for GLCD_DisplayString
    glcd_scroll.o(i.refresh_lcd) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.refresh_lcd) refers to glcd_scroll.o(.bss) for chache
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.GLCD_SetWindow) for GLCD_SetWindow
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.wr_dat_start) for wr_dat_start
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.wr_dat_only) for wr_dat_only
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.wr_dat_stop) for wr_dat_stop
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(.data) for Color
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.GLCD_SetWindow) for GLCD_SetWindow
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.wr_dat_start) for wr_dat_start
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.wr_dat_only) for wr_dat_only
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.wr_dat_stop) for wr_dat_stop
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.GLCD_WindowMax) for GLCD_WindowMax
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.wr_dat_start) for wr_dat_start
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.wr_dat_only) for wr_dat_only
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.wr_dat_stop) for wr_dat_stop
    glcd_spi_lpc1700.o(i.GLCD_ClearLn) refers to glcd_spi_lpc1700.o(i.GLCD_WindowMax) for GLCD_WindowMax
    glcd_spi_lpc1700.o(i.GLCD_ClearLn) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayString) for GLCD_DisplayString
    glcd_spi_lpc1700.o(i.GLCD_DisplayChar) refers to glcd_spi_lpc1700.o(i.GLCD_DrawChar) for GLCD_DrawChar
    glcd_spi_lpc1700.o(i.GLCD_DisplayChar) refers to glcd_spi_lpc1700.o(.constdata) for Font_6x8_h
    glcd_spi_lpc1700.o(i.GLCD_DisplayString) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayChar) for GLCD_DisplayChar
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.GLCD_SetWindow) for GLCD_SetWindow
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.wr_dat_start) for wr_dat_start
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.wr_dat_only) for wr_dat_only
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.wr_dat_stop) for wr_dat_stop
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(.data) for Color
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(i.rd_id_man) for rd_id_man
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(i.rd_reg) for rd_reg
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(i.wr_reg) for wr_reg
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(i.delay) for delay
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(.data) for Himax
    glcd_spi_lpc1700.o(i.GLCD_PutPixel) refers to glcd_spi_lpc1700.o(i.wr_reg) for wr_reg
    glcd_spi_lpc1700.o(i.GLCD_PutPixel) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_PutPixel) refers to glcd_spi_lpc1700.o(i.wr_dat) for wr_dat
    glcd_spi_lpc1700.o(i.GLCD_PutPixel) refers to glcd_spi_lpc1700.o(.data) for Himax
    glcd_spi_lpc1700.o(i.GLCD_SetBackColor) refers to glcd_spi_lpc1700.o(.data) for Color
    glcd_spi_lpc1700.o(i.GLCD_SetTextColor) refers to glcd_spi_lpc1700.o(.data) for Color
    glcd_spi_lpc1700.o(i.GLCD_SetWindow) refers to glcd_spi_lpc1700.o(i.wr_reg) for wr_reg
    glcd_spi_lpc1700.o(i.GLCD_SetWindow) refers to glcd_spi_lpc1700.o(.data) for Himax
    glcd_spi_lpc1700.o(i.GLCD_WindowMax) refers to glcd_spi_lpc1700.o(i.GLCD_SetWindow) for GLCD_SetWindow
    glcd_spi_lpc1700.o(i.GLCD_WrCmd) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_WrReg) refers to glcd_spi_lpc1700.o(i.wr_reg) for wr_reg
    glcd_spi_lpc1700.o(i.rd_id_man) refers to glcd_spi_lpc1700.o(i.spi_tran_man) for spi_tran_man
    glcd_spi_lpc1700.o(i.rd_reg) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.rd_reg) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.spi_tran_man) refers to glcd_spi_lpc1700.o(i.delay) for delay
    glcd_spi_lpc1700.o(i.wr_cmd) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.wr_dat) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.wr_dat_only) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.wr_dat_start) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.wr_reg) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.wr_reg) refers to glcd_spi_lpc1700.o(i.wr_dat) for wr_dat
    retarget.o(i._ttywrch) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.fgetc) refers to retarget.o(i.getkey) for getkey
    retarget.o(i.fgetc) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.fputc) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.getkey) refers to uart.o(i.UARTInit) for UARTInit
    retarget.o(i.getkey) refers to uart.o(i.UARTReceiveChar) for UARTReceiveChar
    retarget.o(i.getkey) refers to retarget.o(.data) for uart_init_called
    retarget.o(i.sendchar) refers to uart.o(i.UARTInit) for UARTInit
    retarget.o(i.sendchar) refers to uart.o(i.UARTSendChar) for UARTSendChar
    retarget.o(i.sendchar) refers to retarget.o(.data) for uart_init_called
    uart.o(i.FreeRcv) refers to uart.o(i.Free) for Free
    uart.o(i.FreeRcv) refers to uart.o(.data) for RcvLock0
    uart.o(i.FreeSnd) refers to uart.o(i.Free) for Free
    uart.o(i.FreeSnd) refers to uart.o(.data) for SndLock0
    uart.o(i.LockRcv) refers to uart.o(i.Lock) for Lock
    uart.o(i.LockRcv) refers to uart.o(.data) for RcvLock0
    uart.o(i.LockSnd) refers to uart.o(i.Lock) for Lock
    uart.o(i.LockSnd) refers to uart.o(.data) for SndLock0
    uart.o(i.UART0_IRQHandler) refers to uart.o(.bss) for UART0Buffer
    uart.o(i.UART0_IRQHandler) refers to uart.o(.data) for UART0Count
    uart.o(i.UART1_IRQHandler) refers to uart.o(.bss) for UART1Buffer
    uart.o(i.UART1_IRQHandler) refers to uart.o(.data) for UART1Count
    uart.o(i.UARTInit) refers to uart.o(i.getFrequency) for getFrequency
    uart.o(i.UARTInit) refers to uart.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    uart.o(i.UARTInit) refers to uart.o(i.FreeRcv) for FreeRcv
    uart.o(i.UARTInit) refers to uart.o(i.FreeSnd) for FreeSnd
    uart.o(i.UARTRecieve) refers to uart.o(i.LockRcv) for LockRcv
    uart.o(i.UARTRecieve) refers to uart.o(i.FreeRcv) for FreeRcv
    uart.o(i.UARTRecieve) refers to uart.o(.data) for UART0Count
    uart.o(i.UARTRecieve) refers to uart.o(.bss) for UART0Buffer
    uart.o(i.UARTSend) refers to uart.o(i.LockSnd) for LockSnd
    uart.o(i.UARTSend) refers to uart.o(i.FreeSnd) for FreeSnd
    uart.o(i.UARTSend) refers to uart.o(.data) for UART0TxEmpty
    uart.o(i.getFrequency) refers to system_lpc17xx.o(.data) for SystemCoreClock
    main.o(i.displayScore) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    main.o(i.displayScore) refers to peripherals.o(i.displayScoreWithLed) for displayScoreWithLed
    main.o(i.displayScore) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    main.o(i.displayScore) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    main.o(i.displayScore) refers to main.o(.data) for mutex
    main.o(i.getButtonInput) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    main.o(i.getButtonInput) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.getButtonInput) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    main.o(i.getButtonInput) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    main.o(i.getButtonInput) refers to main.o(.data) for mutex
    main.o(i.getJoyStickInput) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    main.o(i.getJoyStickInput) refers to peripherals.o(i.joystickDirection) for joystickDirection
    main.o(i.getJoyStickInput) refers to game_logic.o(i.setVelocity) for setVelocity
    main.o(i.getJoyStickInput) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    main.o(i.getJoyStickInput) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    main.o(i.getJoyStickInput) refers to main.o(.data) for mutex
    main.o(i.main) refers to noretval__2printf.o(.text) for __2printf
    main.o(i.main) refers to glcd_spi_lpc1700.o(i.GLCD_Init) for GLCD_Init
    main.o(i.main) refers to game_logic.o(i.initGameLogic) for initGameLogic
    main.o(i.main) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(i.main) refers to main.o(.data) for mutex
    main.o(i.main) refers to main.o(i.getJoyStickInput) for getJoyStickInput
    main.o(i.main) refers to main.o(i.render) for render
    main.o(i.main) refers to main.o(i.getButtonInput) for getButtonInput
    main.o(i.main) refers to main.o(i.staticScreen) for staticScreen
    main.o(i.main) refers to main.o(i.displayScore) for displayScore
    main.o(i.render) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    main.o(i.render) refers to game_logic.o(i.moveSnakeHead) for moveSnakeHead
    main.o(i.render) refers to game_logic.o(i.collisionDetected) for collisionDetected
    main.o(i.render) refers to game_logic.o(i.appleEaten) for appleEaten
    main.o(i.render) refers to game_logic.o(i.moveSnakeBody) for moveSnakeBody
    main.o(i.render) refers to game_logic.o(i.putApple) for putApple
    main.o(i.render) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    main.o(i.render) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    main.o(i.render) refers to main.o(.data) for mutex
    main.o(i.staticScreen) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    main.o(i.staticScreen) refers to game_logic.o(i.gameOver) for gameOver
    main.o(i.staticScreen) refers to game_logic.o(i.initGameLogic) for initGameLogic
    main.o(i.staticScreen) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    main.o(i.staticScreen) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    main.o(i.staticScreen) refers to main.o(.data) for mutex
    linked_list.o(i.clearList) refers to h1_free_mt.o(.text) for free
    linked_list.o(i.dequeue) refers to h1_free_mt.o(.text) for free
    linked_list.o(i.print) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    linked_list.o(i.print) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    linked_list.o(i.print) refers to _printf_dec.o(.text) for _printf_int_dec
    linked_list.o(i.print) refers to noretval__2printf.o(.text) for __2printf
    linked_list.o(i.printAll) refers to linked_list.o(i.print) for print
    linked_list.o(i.printAll) refers to noretval__2printf.o(.text) for __2printf
    glcd_render.o(i.drawBorder) refers to glcd_spi_lpc1700.o(i.GLCD_SetTextColor) for GLCD_SetTextColor
    glcd_render.o(i.drawBorder) refers to glcd_spi_lpc1700.o(i.GLCD_PutPixel) for GLCD_PutPixel
    glcd_render.o(i.drawSnakeBody) refers to glcd_render.o(i.putPixel) for putPixel
    glcd_render.o(i.drawStaticScreen) refers to glcd_spi_lpc1700.o(i.GLCD_Clear) for GLCD_Clear
    glcd_render.o(i.drawStaticScreen) refers to glcd_spi_lpc1700.o(i.GLCD_SetTextColor) for GLCD_SetTextColor
    glcd_render.o(i.drawStaticScreen) refers to noretval__2sprintf.o(.text) for __2sprintf
    glcd_render.o(i.drawStaticScreen) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayString) for GLCD_DisplayString
    glcd_render.o(i.putPixel) refers to glcd_spi_lpc1700.o(i.GLCD_SetTextColor) for GLCD_SetTextColor
    glcd_render.o(i.putPixel) refers to glcd_spi_lpc1700.o(i.GLCD_PutPixel) for GLCD_PutPixel
    glcd_render.o(i.putPixel) refers to game_logic.o(.constdata) for PIXEL_DIM
    game_logic.o(i.appleEaten) refers to game_logic.o(.data) for px
    game_logic.o(i.checkTailForApple) refers to game_logic.o(.data) for tail
    game_logic.o(i.collisionDetected) refers to game_logic.o(.data) for tail
    game_logic.o(i.gameOver) refers to glcd_render.o(i.drawStaticScreen) for drawStaticScreen
    game_logic.o(i.generateApplePosition) refers to rand.o(.emb_text) for rand
    game_logic.o(i.initGameLogic) refers to glcd_spi_lpc1700.o(i.GLCD_Clear) for GLCD_Clear
    game_logic.o(i.initGameLogic) refers to linked_list.o(i.clearList) for clearList
    game_logic.o(i.initGameLogic) refers to h1_alloc_mt.o(.text) for malloc
    game_logic.o(i.initGameLogic) refers to linked_list.o(i.pushEnd) for pushEnd
    game_logic.o(i.initGameLogic) refers to game_logic.o(i.putApple) for putApple
    game_logic.o(i.initGameLogic) refers to glcd_render.o(i.drawBorder) for drawBorder
    game_logic.o(i.initGameLogic) refers to glcd_render.o(i.putPixel) for putPixel
    game_logic.o(i.initGameLogic) refers to glcd_render.o(i.drawSnakeBody) for drawSnakeBody
    game_logic.o(i.initGameLogic) refers to game_logic.o(.data) for tail
    game_logic.o(i.moveSnakeBody) refers to h1_alloc_mt.o(.text) for malloc
    game_logic.o(i.moveSnakeBody) refers to linked_list.o(i.pushFront) for pushFront
    game_logic.o(i.moveSnakeBody) refers to glcd_render.o(i.drawSnakeBody) for drawSnakeBody
    game_logic.o(i.moveSnakeBody) refers to glcd_render.o(i.putPixel) for putPixel
    game_logic.o(i.moveSnakeBody) refers to linked_list.o(i.dequeue) for dequeue
    game_logic.o(i.moveSnakeBody) refers to game_logic.o(.data) for px
    game_logic.o(i.moveSnakeHead) refers to glcd_render.o(i.putPixel) for putPixel
    game_logic.o(i.moveSnakeHead) refers to game_logic.o(.data) for px
    game_logic.o(i.putApple) refers to game_logic.o(i.generateApplePosition) for generateApplePosition
    game_logic.o(i.putApple) refers to game_logic.o(i.checkTailForApple) for checkTailForApple
    game_logic.o(i.putApple) refers to glcd_render.o(i.putPixel) for putPixel
    game_logic.o(i.putApple) refers to game_logic.o(.data) for px
    game_logic.o(i.setVelocity) refers to game_logic.o(.data) for vx
    peripherals.o(i.displayScoreWithLed) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    peripherals.o(i.displayScoreWithLed) refers to peripherals.o(.constdata) for .constdata
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_lib.o(.data) for os_kernel_active
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    startup_lpc17xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc17xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc17xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc17xx.o(RESET) refers to startup_lpc17xx.o(STACK) for __initial_sp
    startup_lpc17xx.o(RESET) refers to startup_lpc17xx.o(.text) for Reset_Handler
    startup_lpc17xx.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_lpc17xx.o(RESET) refers to uart.o(i.UART0_IRQHandler) for UART0_IRQHandler
    startup_lpc17xx.o(RESET) refers to uart.o(i.UART1_IRQHandler) for UART1_IRQHandler
    startup_lpc17xx.o(.ARM.__at_0x02FC) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc17xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc17xx.o(.text) refers to system_lpc17xx.o(i.SystemInit) for SystemInit
    startup_lpc17xx.o(.text) refers to __main.o(!!!main) for __main
    startup_lpc17xx.o(.text) refers to startup_lpc17xx.o(HEAP) for Heap_Mem
    startup_lpc17xx.o(.text) refers to startup_lpc17xx.o(STACK) for Stack_Mem
    system_lpc17xx.o(i.SystemCoreClockUpdate) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    system_lpc17xx.o(i.SystemCoreClockUpdate) refers to system_lpc17xx.o(.data) for SystemCoreClock
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm3.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm3.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_lpc17xx.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_lpc17xx.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_alloc.o(.text) refers (Special) to h1_init_mt.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc_mt.o(.text) refers (Special) to h1_init_mt.o(.text) for __Heap_Initialize
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    h1_alloc_mt.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    h1_alloc_mt.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_free_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    h1_free_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    h1_free_mt.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.___Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.___Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.___Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.___Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.___Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i._free$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i._free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._malloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i._malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._posix_memalign$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i._posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._realloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._realloc$realtime) refers to h1_free_mt.o(.text) for free
    heap2.o(i._realloc$realtime) refers to h1_alloc_mt.o(.text) for malloc
    heap2.o(i._realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i._realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2mt.o(i._FDIterate) refers to heap2mt.o(.conststring) for .conststring
    heap2mt.o(i.___Heap_Finalize$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_free) for _mutex_free
    heap2mt.o(i.___Heap_Initialize$realtime$concurrent) refers to rtx_lib.o(i._mutex_initialize) for _mutex_initialize
    heap2mt.o(i.___Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i.___Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers to heap2mt.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers to heap2mt.o(i._FDIterate) for _FDIterate
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers to heap2mt.o(.conststring) for .conststring
    heap2mt.o(i._free$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._free$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i._free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._free$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._malloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2mt.o(i._malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._realloc$realtime$concurrent) refers to h1_free_mt.o(.text) for free
    heap2mt.o(i._realloc$realtime$concurrent) refers to h1_alloc_mt.o(.text) for malloc
    heap2mt.o(i._realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    __2printf.o(.text) refers to _printf_char_file.o(.text) for _printf_char_file
    __2printf.o(.text) refers to retarget.o(.data) for __stdout
    __2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2printf.o(.text) refers to _printf_char_file.o(.text) for _printf_char_file
    noretval__2printf.o(.text) refers to retarget.o(.data) for __stdout
    noretval__2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    rand.o(.emb_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_rand_2
    rand.o(.emb_text) refers to rand.o(.text) for _rand_init
    rand.o(.emb_text) refers to rand.o(.bss) for _random_number_data
    rand.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_rand_2
    rand.o(.text) refers to rand.o(.bss) for .bss
    rand.o(.bss) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_rand_2
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_heap_descriptor_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000005) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc2.o(.emb_text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend_mt.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init_mt.o(.text) for __Heap_Initialize
    h1_init_mt.o(.text) refers to rtx_lib.o(i._mutex_initialize) for _mutex_initialize
    _printf_char_common.o(.text) refers to __printf.o(.text) for __printf
    _printf_char_file.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    _printf_char_file.o(.text) refers to retarget.o(i.ferror) for ferror
    _printf_char_file.o(.text) refers to retarget.o(i.fputc) for fputc
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit2.o(.ARM.Collect$$libinit$$00000005) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$0000000D) refers (Weak) to rand.o(.text) for _rand_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    maybetermalloc2.o(.emb_text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free_mt.o(.text) for free
    h1_extend_mt.o(.text) refers to h1_free_mt.o(.text) for _free_internal
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_lpc17xx.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to retarget.o(i._sys_exit) for _sys_exit
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final_mt.o(.text) for __Heap_Finalize
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_exit.o(.text) refers to retarget.o(i._sys_exit) for _sys_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    h1_final_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_free) for _mutex_free
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to retarget.o(i._ttywrch) for _ttywrch
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to retarget.o(i._sys_exit) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1


==============================================================================

Removing Unused input sections from the image.

    Removing glcd_scroll.o(.rev16_text), (4 bytes).
    Removing glcd_scroll.o(.revsh_text), (4 bytes).
    Removing glcd_scroll.o(.rrx_text), (6 bytes).
    Removing glcd_scroll.o(i.append_char), (240 bytes).
    Removing glcd_scroll.o(i.initJoyStick), (108 bytes).
    Removing glcd_scroll.o(i.init_scroll), (72 bytes).
    Removing glcd_scroll.o(i.joyStickBusyWaitingMonitor), (96 bytes).
    Removing glcd_scroll.o(i.last_line), (32 bytes).
    Removing glcd_scroll.o(i.last_window_line), (32 bytes).
    Removing glcd_scroll.o(i.moveDown), (68 bytes).
    Removing glcd_scroll.o(i.moveFirst), (60 bytes).
    Removing glcd_scroll.o(i.moveLast), (96 bytes).
    Removing glcd_scroll.o(i.moveUp), (72 bytes).
    Removing glcd_scroll.o(i.print_string), (34 bytes).
    Removing glcd_scroll.o(i.print_text), (24 bytes).
    Removing glcd_scroll.o(i.refresh_lcd), (80 bytes).
    Removing glcd_scroll.o(.bss), (525 bytes).
    Removing glcd_scroll.o(.data), (20 bytes).
    Removing glcd_spi_lpc1700.o(.rev16_text), (4 bytes).
    Removing glcd_spi_lpc1700.o(.revsh_text), (4 bytes).
    Removing glcd_spi_lpc1700.o(.rrx_text), (6 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_Bargraph), (104 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_Bitmap), (82 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_ClearLn), (94 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_ScrollVertical), (2 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_SetBackColor), (12 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_WrCmd), (12 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_WrReg), (16 bytes).
    Removing retarget.o(i.fgetc), (20 bytes).
    Removing retarget.o(i.getkey), (36 bytes).
    Removing uart.o(.rev16_text), (4 bytes).
    Removing uart.o(.revsh_text), (4 bytes).
    Removing uart.o(.rrx_text), (6 bytes).
    Removing uart.o(i.Lock), (28 bytes).
    Removing uart.o(i.LockRcv), (36 bytes).
    Removing uart.o(i.LockSnd), (36 bytes).
    Removing uart.o(i.UARTReceiveChar), (36 bytes).
    Removing uart.o(i.UARTRecieve), (160 bytes).
    Removing uart.o(i.UARTSend), (132 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing linked_list.o(i.print), (28 bytes).
    Removing linked_list.o(i.printAll), (32 bytes).
    Removing peripherals.o(.rev16_text), (4 bytes).
    Removing peripherals.o(.revsh_text), (4 bytes).
    Removing peripherals.o(.rrx_text), (6 bytes).
    Removing peripherals.o(i.buttonPressed), (20 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(.emb_text), (0 bytes).
    Removing rtx_lib.o(.rodata), (56 bytes).
    Removing rtx_lib.o(i.__user_perthread_libspace), (88 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (496 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing system_lpc17xx.o(.rev16_text), (4 bytes).
    Removing system_lpc17xx.o(.revsh_text), (4 bytes).
    Removing system_lpc17xx.o(.rrx_text), (6 bytes).
    Removing system_lpc17xx.o(i.SystemCoreClockUpdate), (424 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (156 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (30 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (128 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (188 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (108 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (40 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (124 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (20 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (84 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (60 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (84 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (284 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (44 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (60 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (74 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (120 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (48 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (186 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (124 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).

368 unused section(s) (total 10565 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      204  startup_lpc17xx.o(RESET)
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2mt.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_file.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _sputc.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  rand.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm3.s            0x00000000   Number         0  irq_cm3.o ABSOLUTE
    C:\Software\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Software\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.3.0\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    GLCD_render.c                            0x00000000   Number         0  glcd_render.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\LPC1768\startup_LPC17xx.s     0x00000000   Number         0  startup_lpc17xx.o ABSOLUTE
    RTE\Device\LPC1768\system_LPC17xx.c      0x00000000   Number         0  system_lpc17xx.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\LPC1768\\system_LPC17xx.c   0x00000000   Number         0  system_lpc17xx.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    game_logic.c                             0x00000000   Number         0  game_logic.o ABSOLUTE
    linked_list.c                            0x00000000   Number         0  linked_list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    peripherals.c                            0x00000000   Number         0  peripherals.o ABSOLUTE
    peripherals.c                            0x00000000   Number         0  peripherals.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    src\GLCD_SPI_LPC1700.c                   0x00000000   Number         0  glcd_spi_lpc1700.o ABSOLUTE
    src\GLCD_Scroll.c                        0x00000000   Number         0  glcd_scroll.o ABSOLUTE
    src\Retarget.c                           0x00000000   Number         0  retarget.o ABSOLUTE
    src\\GLCD_SPI_LPC1700.c                  0x00000000   Number         0  glcd_spi_lpc1700.o ABSOLUTE
    src\\GLCD_Scroll.c                       0x00000000   Number         0  glcd_scroll.o ABSOLUTE
    src\\uart.c                              0x00000000   Number         0  uart.o ABSOLUTE
    src\uart.c                               0x00000000   Number         0  uart.o ABSOLUTE
    !!!main                                  0x000000cc   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000d4   Section       52  __scatter.o(!!!scatter)
    !!dczerorl                               0x00000108   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_zi                             0x00000144   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x00000160   Section        0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000017  0x00000160   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x00000164   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000005          0x00000166   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000005)
    .ARM.Collect$$libinit$$0000000A          0x0000016e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x0000016e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000D          0x0000016e   Section        4  libinit2.o(.ARM.Collect$$libinit$$0000000D)
    .ARM.Collect$$libinit$$0000000E          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000172   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x00000172   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x00000174   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000176   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000176   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000176   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000176   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000176   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000D      0x00000176   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    .ARM.Collect$$libshutdown$$0000000F      0x0000017a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0000017a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0000017c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0000017c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0000017c   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x00000182   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x0000018a   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0000018e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0000018e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000196   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000198   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000198   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0000019c   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x000001a4   Section       52  rand.o(.emb_text)
    .emb_text                                0x000001d8   Section        0  maybetermalloc2.o(.emb_text)
    .text                                    0x000001d8   Section       64  startup_lpc17xx.o(.text)
    .text                                    0x00000218   Section      148  irq_cm3.o(.text)
    .text                                    0x000002ac   Section        0  noretval__2printf.o(.text)
    .text                                    0x000002c4   Section        0  noretval__2sprintf.o(.text)
    .text                                    0x000002ec   Section        0  heapauxi.o(.text)
    .text                                    0x000002f2   Section       10  rt_heap_descriptor_twolibspace.o(.text)
    .ARM.__at_0x02FC                         0x000002fc   Section        4  startup_lpc17xx.o(.ARM.__at_0x02FC)
    .text                                    0x00000300   Section        0  h1_alloc_mt.o(.text)
    Heap1_SizeAdjust                         0x00000301   Thumb Code     8  h1_alloc_mt.o(.text)
    .text                                    0x0000039e   Section        0  h1_free_mt.o(.text)
    .text                                    0x00000414   Section        0  __printf.o(.text)
    .text                                    0x0000047c   Section        0  rand.o(.text)
    .text                                    0x000004b8   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x00000542   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x000005a6   Section       68  rt_memclr.o(.text)
    .text                                    0x000005ea   Section       78  rt_memclr_w.o(.text)
    .text                                    0x00000638   Section        0  hguard.o(.text)
    .text                                    0x0000063c   Section        0  init_alloc.o(.text)
    .text                                    0x000006c6   Section        0  h1_init_mt.o(.text)
    .text                                    0x000006d8   Section        0  _printf_char_common.o(.text)
    _printf_input_char                       0x000006d9   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x00000708   Section        0  _sputc.o(.text)
    .text                                    0x00000714   Section        0  _printf_char_file.o(.text)
    .text                                    0x00000738   Section        8  libspace.o(.text)
    .text                                    0x00000740   Section        0  h1_extend_mt.o(.text)
    .text                                    0x0000077e   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x0000078c   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x000007d6   Section        0  term_alloc.o(.text)
    .text                                    0x000007e6   Section        0  exit.o(.text)
    .text                                    0x000007f8   Section        0  defsig_exit.o(.text)
    .text                                    0x00000804   Section        0  defsig_rtmem_inner.o(.text)
    .text                                    0x00000854   Section        0  h1_final_mt.o(.text)
    .text                                    0x0000085e   Section        0  defsig_general.o(.text)
    [Anonymous Symbol]                       0x00000890   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueueGet                          0x00000891   Thumb Code    70  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x000008d6   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueuePut                          0x000008d7   Thumb Code   100  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x0000093a   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    MessageQueueRemove                       0x0000093b   Thumb Code    38  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x00000960   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x00000968   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x0000096c   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x0000098c   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x00000990   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x00000994   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x00000998   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x000009a0   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x000009d0   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x000009d4   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x000009d8   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x000009dc   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x000009e0   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x000009e1   Thumb Code   106  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x00000a4c   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerInsert                              0x00000a4d   Thumb Code    80  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x00000a98   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x00000a9c   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x00000abc   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x00000ac0   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.3_0                             0x00000aec   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.3_1                             0x00000af0   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x00000af4   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.0_0                             0x00000b14   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x00000b18   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.5_0                             0x00000b38   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x00000b3c   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x00000ba8   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x00000bac   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x00000bcc   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x00000bd0   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x00000c4c   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x00000c50   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.3_0                             0x00000c70   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x00000c74   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.6_0                             0x00000c94   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x00000c98   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.1_0                             0x00000cb8   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x00000cbc   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.4_0                             0x00000cdc   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x00000ce0   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00000d60   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x00000db2   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x00000de8   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x00000e32   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x00000e88   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x00000edc   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMessageQueuePostProcess             0x00000edd   Thumb Code   214  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00000fb2   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x00000ff8   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x00001084   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x00001088   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x000010f4   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x000010f8   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x000010fc   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x000010fd   Thumb Code    56  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x00001130   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x00001134   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x00001135   Thumb Code   148  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.14_0                            0x000011c4   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x000011c8   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x000011c9   Thumb Code    88  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.12_0                            0x0000121c   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00001220   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x00001254   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x00001258   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.9_0                             0x000012b4   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x000012b8   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x000012b9   Thumb Code    88  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.52_0                            0x0000130c   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x00001310   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x00001326   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x0000135e   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x00001372   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x0000139a   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x0000139b   Thumb Code    42  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x000013c4   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x000013d4   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x000013d8   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x000013e0   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_0                             0x00001400   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_1                             0x00001404   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x00001408   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_0                            0x00001450   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x00001454   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_2                            0x00001458   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_3                            0x0000145c   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x00001460   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x0000146c   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x00001470   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x000014a4   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x000014a8   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x000014cc   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x00001538   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x0000153c   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_0                             0x00001574   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_1                             0x00001578   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x0000157c   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x00001580   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osRtxTimerTick                           0x00001581   Thumb Code    88  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x000015d4   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x000015d8   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.30_0                            0x000015e0   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x000015e4   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x00001604   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x00001608   Section        0  rtx_thread.o(.text.osThreadYield)
    __arm_cp.25_0                            0x00001628   Number         4  rtx_thread.o(.text.osThreadYield)
    [Anonymous Symbol]                       0x0000162c   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxDelay                              0x0000162d   Thumb Code    20  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x00001640   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetState                     0x00001641   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.4_0                             0x00001648   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x0000164c   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x0000164d   Thumb Code   376  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_0                            0x000017b8   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_1                            0x000017bc   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_2                            0x000017c0   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x000017c4   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x000017c5   Thumb Code   140  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_0                            0x00001840   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_1                            0x00001844   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_2                            0x00001848   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_3                            0x0000184c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x00001850   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGet                    0x00001851   Thumb Code   240  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x0000193c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x00001940   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueueNew                    0x00001941   Thumb Code   312  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_0                            0x00001a70   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x00001a74   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x00001a78   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x00001a79   Thumb Code   200  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.19_0                            0x00001b3c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x00001b40   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexAcquire                       0x00001b41   Thumb Code   152  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.9_0                             0x00001bd4   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x00001bd8   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexDelete                        0x00001bd9   Thumb Code   212  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.12_0                            0x00001ca8   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x00001cac   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexNew                           0x00001cad   Thumb Code   108  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.7_0                             0x00001d14   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x00001d18   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxMutexRelease                       0x00001d19   Thumb Code   188  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.10_0                            0x00001dd0   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x00001dd4   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x00001dd5   Thumb Code   104  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.54_0                            0x00001e38   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x00001e3c   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x00001e3d   Thumb Code   480  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x00002008   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x0000200c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x00002010   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x00002014   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x00002018   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x0000201c   Section        0  rtx_thread.o(.text.svcRtxThreadYield)
    svcRtxThreadYield                        0x0000201d   Thumb Code    56  rtx_thread.o(.text.svcRtxThreadYield)
    __arm_cp.47_0                            0x00002050   Number         4  rtx_thread.o(.text.svcRtxThreadYield)
    i.Free                                   0x00002054   Section        0  uart.o(i.Free)
    i.FreeRcv                                0x0000205c   Section        0  uart.o(i.FreeRcv)
    i.FreeSnd                                0x00002080   Section        0  uart.o(i.FreeSnd)
    i.GLCD_Clear                             0x000020a4   Section        0  glcd_spi_lpc1700.o(i.GLCD_Clear)
    i.GLCD_DisplayChar                       0x000020d0   Section        0  glcd_spi_lpc1700.o(i.GLCD_DisplayChar)
    i.GLCD_DisplayString                     0x0000212c   Section        0  glcd_spi_lpc1700.o(i.GLCD_DisplayString)
    i.GLCD_DrawChar                          0x00002154   Section        0  glcd_spi_lpc1700.o(i.GLCD_DrawChar)
    i.GLCD_Init                              0x000021f0   Section        0  glcd_spi_lpc1700.o(i.GLCD_Init)
    i.GLCD_PutPixel                          0x000027d8   Section        0  glcd_spi_lpc1700.o(i.GLCD_PutPixel)
    i.GLCD_SetTextColor                      0x00002858   Section        0  glcd_spi_lpc1700.o(i.GLCD_SetTextColor)
    i.GLCD_SetWindow                         0x00002864   Section        0  glcd_spi_lpc1700.o(i.GLCD_SetWindow)
    i.GLCD_WindowMax                         0x00002910   Section        0  glcd_spi_lpc1700.o(i.GLCD_WindowMax)
    i.SystemInit                             0x00002924   Section        0  system_lpc17xx.o(i.SystemInit)
    i.UART0_IRQHandler                       0x00002a64   Section        0  uart.o(i.UART0_IRQHandler)
    i.UART1_IRQHandler                       0x00002acc   Section        0  uart.o(i.UART1_IRQHandler)
    i.UARTInit                               0x00002b3c   Section        0  uart.o(i.UARTInit)
    i.UARTSendChar                           0x00002bf8   Section        0  uart.o(i.UARTSendChar)
    i.__NVIC_EnableIRQ                       0x00002c1c   Section        0  uart.o(i.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x00002c1d   Thumb Code    26  uart.o(i.__NVIC_EnableIRQ)
    i._mutex_acquire                         0x00002c36   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x00002c37   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x00002c4c   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x00002c4d   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x00002c58   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x00002c59   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x00002c7a   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x00002c7b   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x00002c8c   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i._sys_exit                              0x00002c94   Section        0  retarget.o(i._sys_exit)
    i._ttywrch                               0x00002c98   Section        0  retarget.o(i._ttywrch)
    i.appleEaten                             0x00002ca4   Section        0  game_logic.o(i.appleEaten)
    i.checkTailForApple                      0x00002cd4   Section        0  game_logic.o(i.checkTailForApple)
    i.clearList                              0x00002d00   Section        0  linked_list.o(i.clearList)
    i.collisionDetected                      0x00002d20   Section        0  game_logic.o(i.collisionDetected)
    i.delay                                  0x00002d68   Section        0  glcd_spi_lpc1700.o(i.delay)
    delay                                    0x00002d69   Thumb Code    14  glcd_spi_lpc1700.o(i.delay)
    i.dequeue                                0x00002d76   Section        0  linked_list.o(i.dequeue)
    i.displayScore                           0x00002d90   Section        0  main.o(i.displayScore)
    i.displayScoreWithLed                    0x00002df8   Section        0  peripherals.o(i.displayScoreWithLed)
    i.drawBorder                             0x00002e68   Section        0  glcd_render.o(i.drawBorder)
    i.drawSnakeBody                          0x00002ed4   Section        0  glcd_render.o(i.drawSnakeBody)
    i.drawStaticScreen                       0x00002ef0   Section        0  glcd_render.o(i.drawStaticScreen)
    i.ferror                                 0x00002f70   Section        0  retarget.o(i.ferror)
    i.fputc                                  0x00002f78   Section        0  retarget.o(i.fputc)
    i.gameOver                               0x00002f86   Section        0  game_logic.o(i.gameOver)
    i.generateApplePosition                  0x00002f8e   Section        0  game_logic.o(i.generateApplePosition)
    i.getButtonInput                         0x00002fd8   Section        0  main.o(i.getButtonInput)
    i.getFrequency                           0x00003028   Section        0  uart.o(i.getFrequency)
    i.getJoyStickInput                       0x00003070   Section        0  main.o(i.getJoyStickInput)
    i.initGameLogic                          0x0000309c   Section        0  game_logic.o(i.initGameLogic)
    i.joystickDirection                      0x000031b0   Section        0  peripherals.o(i.joystickDirection)
    i.main                                   0x000031e4   Section        0  main.o(i.main)
    i.moveSnakeBody                          0x00003294   Section        0  game_logic.o(i.moveSnakeBody)
    i.moveSnakeHead                          0x000032f4   Section        0  game_logic.o(i.moveSnakeHead)
    i.osRtxErrorNotify                       0x00003334   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x00003354   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.os_kernel_is_active                    0x00003358   Section        0  rtx_lib.o(i.os_kernel_is_active)
    os_kernel_is_active                      0x00003359   Thumb Code    28  rtx_lib.o(i.os_kernel_is_active)
    i.pushEnd                                0x00003378   Section        0  linked_list.o(i.pushEnd)
    i.pushFront                              0x0000338e   Section        0  linked_list.o(i.pushFront)
    i.putApple                               0x000033a4   Section        0  game_logic.o(i.putApple)
    i.putPixel                               0x00003404   Section        0  glcd_render.o(i.putPixel)
    i.rd_id_man                              0x00003440   Section        0  glcd_spi_lpc1700.o(i.rd_id_man)
    rd_id_man                                0x00003441   Thumb Code   132  glcd_spi_lpc1700.o(i.rd_id_man)
    i.rd_reg                                 0x000034cc   Section        0  glcd_spi_lpc1700.o(i.rd_reg)
    rd_reg                                   0x000034cd   Thumb Code    66  glcd_spi_lpc1700.o(i.rd_reg)
    i.render                                 0x00003514   Section        0  main.o(i.render)
    i.sendchar                               0x00003584   Section        0  retarget.o(i.sendchar)
    i.setVelocity                            0x000035c8   Section        0  game_logic.o(i.setVelocity)
    i.spi_tran                               0x00003644   Section        0  glcd_spi_lpc1700.o(i.spi_tran)
    spi_tran                                 0x00003645   Thumb Code    28  glcd_spi_lpc1700.o(i.spi_tran)
    i.spi_tran_man                           0x00003664   Section        0  glcd_spi_lpc1700.o(i.spi_tran_man)
    spi_tran_man                             0x00003665   Thumb Code   124  glcd_spi_lpc1700.o(i.spi_tran_man)
    i.staticScreen                           0x000036e4   Section        0  main.o(i.staticScreen)
    i.wr_cmd                                 0x00003744   Section        0  glcd_spi_lpc1700.o(i.wr_cmd)
    wr_cmd                                   0x00003745   Thumb Code    36  glcd_spi_lpc1700.o(i.wr_cmd)
    i.wr_dat                                 0x0000376c   Section        0  glcd_spi_lpc1700.o(i.wr_dat)
    wr_dat                                   0x0000376d   Thumb Code    36  glcd_spi_lpc1700.o(i.wr_dat)
    i.wr_dat_only                            0x00003794   Section        0  glcd_spi_lpc1700.o(i.wr_dat_only)
    wr_dat_only                              0x00003795   Thumb Code    18  glcd_spi_lpc1700.o(i.wr_dat_only)
    i.wr_dat_start                           0x000037a8   Section        0  glcd_spi_lpc1700.o(i.wr_dat_start)
    wr_dat_start                             0x000037a9   Thumb Code    16  glcd_spi_lpc1700.o(i.wr_dat_start)
    i.wr_dat_stop                            0x000037bc   Section        0  glcd_spi_lpc1700.o(i.wr_dat_stop)
    wr_dat_stop                              0x000037bd   Thumb Code     8  glcd_spi_lpc1700.o(i.wr_dat_stop)
    i.wr_reg                                 0x000037c8   Section        0  glcd_spi_lpc1700.o(i.wr_reg)
    wr_reg                                   0x000037c9   Thumb Code    20  glcd_spi_lpc1700.o(i.wr_reg)
    .constdata                               0x000037dc   Section     6272  glcd_spi_lpc1700.o(.constdata)
    .constdata                               0x0000505c   Section        4  game_logic.o(.constdata)
    .constdata                               0x00005060   Section       36  peripherals.o(.constdata)
    .constdata                               0x00005084   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x00005084   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x000050a8   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x000050cc   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x000050e8   Section        1  irq_cm3.o(.constdata)
    .rodata                                  0x000050ec   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x000050ec   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x00005154   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x00005154   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x10000000   Section     4160  rtx_lib.o(.bss.os)
    os_mem                                   0x10000000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x10001000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x10001040   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x10001040   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x10001074   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x10001074   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x100010c4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x100010c4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x10001108   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x10001150   Section      512  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x10001150   Data         256  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x10001250   Data         256  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x10001350   Section        5  glcd_spi_lpc1700.o(.data)
    Color                                    0x10001350   Data           4  glcd_spi_lpc1700.o(.data)
    Himax                                    0x10001354   Data           1  glcd_spi_lpc1700.o(.data)
    .data                                    0x10001358   Section       12  retarget.o(.data)
    .data                                    0x10001364   Section       32  uart.o(.data)
    .data                                    0x10001384   Section       40  main.o(.data)
    .data                                    0x100013ac   Section       36  game_logic.o(.data)
    .data                                    0x100013d0   Section        5  rtx_lib.o(.data)
    os_kernel_active                         0x100013d4   Data           1  rtx_lib.o(.data)
    .data                                    0x100013d8   Section        4  system_lpc17xx.o(.data)
    .bss                                     0x10001480   Section      128  uart.o(.bss)
    .bss                                     0x10001500   Section      228  rand.o(.bss)
    .bss                                     0x100015e4   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x10001644   Section        0  os_systick.o(.bss.PendST)
    PendST                                   0x10001644   Data           1  os_systick.o(.bss.PendST)
    HEAP                                     0x10001648   Section     8192  startup_lpc17xx.o(HEAP)
    Heap_Mem                                 0x10001648   Data        8192  startup_lpc17xx.o(HEAP)
    STACK                                    0x10003648   Section     8192  startup_lpc17xx.o(STACK)
    Stack_Mem                                0x10003648   Data        8192  startup_lpc17xx.o(STACK)
    __initial_sp                             0x10005648   Data           0  startup_lpc17xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_lpc17xx.o(RESET)
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _printf_post_padding                      - Undefined Weak Reference
    _printf_pre_padding                       - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __main                                   0x000000cd   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000000d5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000d5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000000d5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000000e3   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x00000109   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x00000109   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_zeroinit                   0x00000145   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_percent                          0x00000161   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_percent_end                      0x00000161   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x00000165   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_2                     0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000005)
    __rt_lib_init_preinit_1                  0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_heap_1                     0x0000016f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_rand_2                     0x0000016f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000D)
    __rt_lib_init_user_alloc_1               0x0000016f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_alloca_1                   0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_lc_collate_1               0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_rand_1                     0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x00000173   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_shutdown                        0x00000175   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000177   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000177   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_2                 0x00000177   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    __rt_lib_shutdown_signal_1               0x00000177   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000177   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000177   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_lib_shutdown_heap_1                 0x0000017b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0000017b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_entry                               0x0000017d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0000017d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0000017d   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x00000183   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x0000018b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0000018f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0000018f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x00000197   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000199   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000199   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0000019d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    rand                                     0x000001a5   Thumb Code    48  rand.o(.emb_text)
    Reset_Handler                            0x000001d9   Thumb Code     8  startup_lpc17xx.o(.text)
    _maybe_terminate_alloc                   0x000001d9   Thumb Code     0  maybetermalloc2.o(.emb_text)
    NMI_Handler                              0x000001e1   Thumb Code     2  startup_lpc17xx.o(.text)
    HardFault_Handler                        0x000001e3   Thumb Code     2  startup_lpc17xx.o(.text)
    MemManage_Handler                        0x000001e5   Thumb Code     2  startup_lpc17xx.o(.text)
    BusFault_Handler                         0x000001e7   Thumb Code     2  startup_lpc17xx.o(.text)
    UsageFault_Handler                       0x000001e9   Thumb Code     2  startup_lpc17xx.o(.text)
    DebugMon_Handler                         0x000001ed   Thumb Code     2  startup_lpc17xx.o(.text)
    ADC_IRQHandler                           0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    BOD_IRQHandler                           0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    CANActivity_IRQHandler                   0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    CAN_IRQHandler                           0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    DMA_IRQHandler                           0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT0_IRQHandler                         0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT1_IRQHandler                         0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT2_IRQHandler                         0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT3_IRQHandler                         0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    ENET_IRQHandler                          0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C0_IRQHandler                          0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C1_IRQHandler                          0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C2_IRQHandler                          0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    I2S_IRQHandler                           0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    MCPWM_IRQHandler                         0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    PLL0_IRQHandler                          0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    PLL1_IRQHandler                          0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    PWM1_IRQHandler                          0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    QEI_IRQHandler                           0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    RIT_IRQHandler                           0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    RTC_IRQHandler                           0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    SPI_IRQHandler                           0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    SSP0_IRQHandler                          0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    SSP1_IRQHandler                          0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER0_IRQHandler                        0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER1_IRQHandler                        0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER2_IRQHandler                        0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER3_IRQHandler                        0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    UART2_IRQHandler                         0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    UART3_IRQHandler                         0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    USBActivity_IRQHandler                   0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    USB_IRQHandler                           0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    WDT_IRQHandler                           0x000001f3   Thumb Code     0  startup_lpc17xx.o(.text)
    __user_initial_stackheap                 0x000001f5   Thumb Code     0  startup_lpc17xx.o(.text)
    SVC_Handler                              0x00000219   Thumb Code   108  irq_cm3.o(.text)
    PendSV_Handler                           0x00000285   Thumb Code    16  irq_cm3.o(.text)
    SysTick_Handler                          0x00000295   Thumb Code    16  irq_cm3.o(.text)
    __2printf                                0x000002ad   Thumb Code    20  noretval__2printf.o(.text)
    __2sprintf                               0x000002c5   Thumb Code    34  noretval__2sprintf.o(.text)
    __use_two_region_memory                  0x000002ed   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x000002ef   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x000002f1   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_descriptor                     0x000002f3   Thumb Code    10  rt_heap_descriptor_twolibspace.o(.text)
    _malloc_internal                         0x00000309   Thumb Code   130  h1_alloc_mt.o(.text)
    malloc                                   0x0000038b   Thumb Code    20  h1_alloc_mt.o(.text)
    _free_internal                           0x0000039f   Thumb Code    98  h1_free_mt.o(.text)
    free                                     0x00000401   Thumb Code    20  h1_free_mt.o(.text)
    __printf                                 0x00000415   Thumb Code   104  __printf.o(.text)
    srand                                    0x0000047d   Thumb Code    42  rand.o(.text)
    _rand_init                               0x000004a7   Thumb Code     4  rand.o(.text)
    __aeabi_memcpy                           0x000004b9   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x000004b9   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x0000051f   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memcpy4                          0x00000543   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000543   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000543   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0000058b   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr                           0x000005a7   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x000005a7   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x000005ab   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x000005eb   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x000005eb   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x000005eb   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x000005ef   Thumb Code     0  rt_memclr_w.o(.text)
    __use_no_heap                            0x00000639   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x0000063b   Thumb Code     2  hguard.o(.text)
    _terminate_user_alloc                    0x0000063d   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x0000063f   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x00000641   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x00000663   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x00000669   Thumb Code    94  init_alloc.o(.text)
    __Heap_Initialize                        0x000006c7   Thumb Code    14  h1_init_mt.o(.text)
    __Heap_DescSize                          0x000006d5   Thumb Code     4  h1_init_mt.o(.text)
    _printf_char_common                      0x000006e3   Thumb Code    32  _printf_char_common.o(.text)
    _sputc                                   0x00000709   Thumb Code    10  _sputc.o(.text)
    _printf_char_file                        0x00000715   Thumb Code    32  _printf_char_file.o(.text)
    __user_libspace                          0x00000739   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000739   Thumb Code     0  libspace.o(.text)
    __Heap_ProvideMemory                     0x00000741   Thumb Code    62  h1_extend_mt.o(.text)
    __rt_SIGRTMEM                            0x0000077f   Thumb Code    14  defsig_rtmem_outer.o(.text)
    __user_setup_stackheap                   0x0000078d   Thumb Code    74  sys_stackheap_outer.o(.text)
    _terminate_alloc                         0x000007d7   Thumb Code    16  term_alloc.o(.text)
    exit                                     0x000007e7   Thumb Code    18  exit.o(.text)
    __sig_exit                               0x000007f9   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGRTMEM_inner                      0x00000805   Thumb Code    22  defsig_rtmem_inner.o(.text)
    __Heap_Finalize                          0x00000855   Thumb Code    10  h1_final_mt.o(.text)
    __default_signal_display                 0x0000085f   Thumb Code    50  defsig_general.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x00000961   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x0000096d   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x00000999   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x000009a1   Thumb Code    64  os_systick.o(.text.OS_Tick_Setup)
    osDelay                                  0x00000a9d   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x00000ac1   Thumb Code    52  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x00000af5   Thumb Code    36  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x00000b19   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x00000b3d   Thumb Code   112  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x00000bad   Thumb Code    36  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x00000bd1   Thumb Code   128  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x00000c51   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x00000c75   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x00000c99   Thumb Code    36  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x00000cbd   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxMemoryAlloc                         0x00000ce1   Thumb Code   128  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x00000d61   Thumb Code    82  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x00000db3   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x00000de9   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x00000e33   Thumb Code    86  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x00000e89   Thumb Code    84  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x00000fb3   Thumb Code    68  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x00000ff9   Thumb Code   144  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x00001089   Thumb Code   116  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x00001221   Thumb Code    56  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x00001259   Thumb Code    96  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x00001311   Thumb Code    22  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x00001327   Thumb Code    56  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x0000135f   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x00001373   Thumb Code    40  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x000013c5   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x000013d9   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x000013e1   Thumb Code    40  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x00001409   Thumb Code    88  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x00001461   Thumb Code    16  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x00001471   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x000014a9   Thumb Code    36  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x000014cd   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x0000153d   Thumb Code    68  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x000015d9   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x000015e5   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    osThreadYield                            0x00001609   Thumb Code    36  rtx_thread.o(.text.osThreadYield)
    Free                                     0x00002055   Thumb Code     6  uart.o(i.Free)
    FreeRcv                                  0x0000205d   Thumb Code    28  uart.o(i.FreeRcv)
    FreeSnd                                  0x00002081   Thumb Code    28  uart.o(i.FreeSnd)
    GLCD_Clear                               0x000020a5   Thumb Code    42  glcd_spi_lpc1700.o(i.GLCD_Clear)
    GLCD_DisplayChar                         0x000020d1   Thumb Code    84  glcd_spi_lpc1700.o(i.GLCD_DisplayChar)
    GLCD_DisplayString                       0x0000212d   Thumb Code    40  glcd_spi_lpc1700.o(i.GLCD_DisplayString)
    GLCD_DrawChar                            0x00002155   Thumb Code   150  glcd_spi_lpc1700.o(i.GLCD_DrawChar)
    GLCD_Init                                0x000021f1   Thumb Code  1506  glcd_spi_lpc1700.o(i.GLCD_Init)
    GLCD_PutPixel                            0x000027d9   Thumb Code   118  glcd_spi_lpc1700.o(i.GLCD_PutPixel)
    GLCD_SetTextColor                        0x00002859   Thumb Code     6  glcd_spi_lpc1700.o(i.GLCD_SetTextColor)
    GLCD_SetWindow                           0x00002865   Thumb Code   168  glcd_spi_lpc1700.o(i.GLCD_SetWindow)
    GLCD_WindowMax                           0x00002911   Thumb Code    18  glcd_spi_lpc1700.o(i.GLCD_WindowMax)
    SystemInit                               0x00002925   Thumb Code   302  system_lpc17xx.o(i.SystemInit)
    UART0_IRQHandler                         0x00002a65   Thumb Code    88  uart.o(i.UART0_IRQHandler)
    UART1_IRQHandler                         0x00002acd   Thumb Code    90  uart.o(i.UART1_IRQHandler)
    UARTInit                                 0x00002b3d   Thumb Code   176  uart.o(i.UARTInit)
    UARTSendChar                             0x00002bf9   Thumb Code    26  uart.o(i.UARTSendChar)
    _mutex_acquire                           0x00002c37   Thumb Code    22  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x00002c4d   Thumb Code    12  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x00002c59   Thumb Code    34  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x00002c7b   Thumb Code    18  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x00002c8d   Thumb Code     8  rtx_lib.o(i._platform_post_stackheap_init)
    _sys_exit                                0x00002c95   Thumb Code     4  retarget.o(i._sys_exit)
    _ttywrch                                 0x00002c99   Thumb Code    12  retarget.o(i._ttywrch)
    appleEaten                               0x00002ca5   Thumb Code    32  game_logic.o(i.appleEaten)
    checkTailForApple                        0x00002cd5   Thumb Code    40  game_logic.o(i.checkTailForApple)
    clearList                                0x00002d01   Thumb Code    30  linked_list.o(i.clearList)
    collisionDetected                        0x00002d21   Thumb Code    60  game_logic.o(i.collisionDetected)
    dequeue                                  0x00002d77   Thumb Code    26  linked_list.o(i.dequeue)
    displayScore                             0x00002d91   Thumb Code    86  main.o(i.displayScore)
    displayScoreWithLed                      0x00002df9   Thumb Code   102  peripherals.o(i.displayScoreWithLed)
    drawBorder                               0x00002e69   Thumb Code   108  glcd_render.o(i.drawBorder)
    drawSnakeBody                            0x00002ed5   Thumb Code    28  glcd_render.o(i.drawSnakeBody)
    drawStaticScreen                         0x00002ef1   Thumb Code    82  glcd_render.o(i.drawStaticScreen)
    ferror                                   0x00002f71   Thumb Code     8  retarget.o(i.ferror)
    fputc                                    0x00002f79   Thumb Code    14  retarget.o(i.fputc)
    gameOver                                 0x00002f87   Thumb Code     8  game_logic.o(i.gameOver)
    generateApplePosition                    0x00002f8f   Thumb Code    72  game_logic.o(i.generateApplePosition)
    getButtonInput                           0x00002fd9   Thumb Code    72  main.o(i.getButtonInput)
    getFrequency                             0x00003029   Thumb Code    62  uart.o(i.getFrequency)
    getJoyStickInput                         0x00003071   Thumb Code    38  main.o(i.getJoyStickInput)
    initGameLogic                            0x0000309d   Thumb Code   242  game_logic.o(i.initGameLogic)
    joystickDirection                        0x000031b1   Thumb Code    48  peripherals.o(i.joystickDirection)
    main                                     0x000031e5   Thumb Code   106  main.o(i.main)
    moveSnakeBody                            0x00003295   Thumb Code    80  game_logic.o(i.moveSnakeBody)
    moveSnakeHead                            0x000032f5   Thumb Code    48  game_logic.o(i.moveSnakeHead)
    osRtxErrorNotify                         0x00003335   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x00003355   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    pushEnd                                  0x00003379   Thumb Code    22  linked_list.o(i.pushEnd)
    pushFront                                0x0000338f   Thumb Code    22  linked_list.o(i.pushFront)
    putApple                                 0x000033a5   Thumb Code    80  game_logic.o(i.putApple)
    putPixel                                 0x00003405   Thumb Code    56  glcd_render.o(i.putPixel)
    render                                   0x00003515   Thumb Code    94  main.o(i.render)
    sendchar                                 0x00003585   Thumb Code    64  retarget.o(i.sendchar)
    setVelocity                              0x000035c9   Thumb Code   114  game_logic.o(i.setVelocity)
    staticScreen                             0x000036e5   Thumb Code    70  main.o(i.staticScreen)
    Font_6x8_h                               0x000037dc   Data         896  glcd_spi_lpc1700.o(.constdata)
    Font_16x24_h                             0x00003b5c   Data        5376  glcd_spi_lpc1700.o(.constdata)
    PIXEL_DIM                                0x0000505c   Data           4  game_logic.o(.constdata)
    osRtxUserSVC                             0x000050e4   Data           4  rtx_lib.o(.constdata)
    irqRtxLib                                0x000050e8   Data           1  irq_cm3.o(.constdata)
    osRtxConfig                              0x000050ec   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x00005160   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00005180   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x10001040   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x10001074   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x100010c4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x1000114c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    uart_init_called                         0x10001358   Data           1  retarget.o(.data)
    __stdout                                 0x1000135c   Data           4  retarget.o(.data)
    __stdin                                  0x10001360   Data           4  retarget.o(.data)
    ITM_RxBuffer                             0x10001364   Data           4  uart.o(.data)
    UART0Status                              0x10001368   Data           4  uart.o(.data)
    UART1Status                              0x1000136c   Data           4  uart.o(.data)
    UART0TxEmpty                             0x10001370   Data           1  uart.o(.data)
    UART1TxEmpty                             0x10001371   Data           1  uart.o(.data)
    UART0Count                               0x10001374   Data           4  uart.o(.data)
    UART1Count                               0x10001378   Data           4  uart.o(.data)
    RcvLock0                                 0x1000137c   Data           1  uart.o(.data)
    SndLock0                                 0x1000137d   Data           1  uart.o(.data)
    RcvLock1                                 0x1000137e   Data           1  uart.o(.data)
    SndLock1                                 0x1000137f   Data           1  uart.o(.data)
    i                                        0x10001380   Data           4  uart.o(.data)
    mutex                                    0x10001384   Data           4  main.o(.data)
    T1                                       0x10001388   Data           4  main.o(.data)
    T2                                       0x1000138c   Data           4  main.o(.data)
    T3                                       0x10001390   Data           4  main.o(.data)
    T4                                       0x10001394   Data           4  main.o(.data)
    T5                                       0x10001398   Data           4  main.o(.data)
    game_over                                0x1000139c   Data           1  main.o(.data)
    score                                    0x100013a0   Data           4  main.o(.data)
    prev_score                               0x100013a4   Data           4  main.o(.data)
    pollrate                                 0x100013a8   Data           4  main.o(.data)
    tail_sz                                  0x100013ac   Data           4  game_logic.o(.data)
    tail                                     0x100013b0   Data           8  game_logic.o(.data)
    apple_x                                  0x100013b8   Data           4  game_logic.o(.data)
    apple_y                                  0x100013bc   Data           4  game_logic.o(.data)
    px                                       0x100013c0   Data           4  game_logic.o(.data)
    py                                       0x100013c4   Data           4  game_logic.o(.data)
    vx                                       0x100013c8   Data           4  game_logic.o(.data)
    vy                                       0x100013cc   Data           4  game_logic.o(.data)
    irqRtxLibRef                             0x100013d0   Data           4  rtx_lib.o(.data)
    SystemCoreClock                          0x100013d8   Data           4  system_lpc17xx.o(.data)
    osRtxInfo                                0x100013dc   Data         164  rtx_kernel.o(.data.os)
    UART0Buffer                              0x10001480   Data          64  uart.o(.bss)
    UART1Buffer                              0x100014c0   Data          64  uart.o(.bss)
    _random_number_data                      0x10001500   Data         228  rand.o(.bss)
    __libspace_start                         0x100015e4   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x10001644   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000001d9

  Load Region LR_1 (Base: 0x00000000, Size: 0x00006600, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x000051cc])

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00005180, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000cc   Data   RO          903    RESET               startup_lpc17xx.o
    0x000000cc   0x000000cc   0x00000008   Code   RO         1544  * !!!main             c_w.l(__main.o)
    0x000000d4   0x000000d4   0x00000034   Code   RO         1762    !!!scatter          c_w.l(__scatter.o)
    0x00000108   0x00000108   0x0000003a   Code   RO         1760    !!dczerorl          c_w.l(__dczerorl.o)
    0x00000142   0x00000142   0x00000002   PAD
    0x00000144   0x00000144   0x0000001c   Code   RO         1764    !!handler_zi        c_w.l(__scatter_zi.o)
    0x00000160   0x00000160   0x00000000   Code   RO         1528    .ARM.Collect$$_printf_percent$$00000000  c_w.l(_printf_percent.o)
    0x00000160   0x00000160   0x00000004   Code   RO         1586    .ARM.Collect$$_printf_percent$$00000017  c_w.l(_printf_percent_end.o)
    0x00000164   0x00000164   0x00000002   Code   RO         1703    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x00000166   0x00000166   0x00000000   Code   RO         1590    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x00000166   0x00000166   0x00000000   Code   RO         1592    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x00000166   0x00000166   0x00000008   Code   RO         1593    .ARM.Collect$$libinit$$00000005  c_w.l(libinit2.o)
    0x0000016e   0x0000016e   0x00000000   Code   RO         1595    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x0000016e   0x0000016e   0x00000000   Code   RO         1597    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0000016e   0x0000016e   0x00000004   Code   RO         1598    .ARM.Collect$$libinit$$0000000D  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1599    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1602    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1604    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1606    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1608    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1610    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1612    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1614    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1616    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1618    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1620    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1622    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1626    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1628    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1630    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1632    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x00000172   0x00000172   0x00000002   Code   RO         1633    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x00000174   0x00000174   0x00000002   Code   RO         1757    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x00000176   0x00000176   0x00000000   Code   RO         1717    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x00000176   0x00000176   0x00000000   Code   RO         1719    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x00000176   0x00000176   0x00000000   Code   RO         1722    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x00000176   0x00000176   0x00000000   Code   RO         1725    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x00000176   0x00000176   0x00000000   Code   RO         1727    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x00000176   0x00000176   0x00000004   Code   RO         1728    .ARM.Collect$$libshutdown$$0000000D  c_w.l(libshutdown2.o)
    0x0000017a   0x0000017a   0x00000000   Code   RO         1730    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0000017a   0x0000017a   0x00000002   Code   RO         1731    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0000017c   0x0000017c   0x00000000   Code   RO         1546    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0000017c   0x0000017c   0x00000000   Code   RO         1640    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0000017c   0x0000017c   0x00000006   Code   RO         1652    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x00000182   0x00000182   0x00000008   Code   RO         1641    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x0000018a   0x0000018a   0x00000004   Code   RO         1643    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0000018e   0x0000018e   0x00000000   Code   RO         1645    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0000018e   0x0000018e   0x00000008   Code   RO         1646    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x00000196   0x00000196   0x00000002   Code   RO         1704    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000198   0x00000198   0x00000000   Code   RO         1733    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000198   0x00000198   0x00000004   Code   RO         1734    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x0000019c   0x0000019c   0x00000006   Code   RO         1735    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x000001a2   0x000001a2   0x00000002   PAD
    0x000001a4   0x000001a4   0x00000034   Code   RO         1529    .emb_text           c_w.l(rand.o)
    0x000001d8   0x000001d8   0x00000000   Code   RO         1659    .emb_text           c_w.l(maybetermalloc2.o)
    0x000001d8   0x000001d8   0x00000040   Code   RO          905  * .text               startup_lpc17xx.o
    0x00000218   0x00000218   0x00000094   Code   RO         1204    .text               RTX_CM3.lib(irq_cm3.o)
    0x000002ac   0x000002ac   0x00000018   Code   RO         1499    .text               c_w.l(noretval__2printf.o)
    0x000002c4   0x000002c4   0x00000028   Code   RO         1501    .text               c_w.l(noretval__2sprintf.o)
    0x000002ec   0x000002ec   0x00000006   Code   RO         1542    .text               c_w.l(heapauxi.o)
    0x000002f2   0x000002f2   0x0000000a   Code   RO         1556    .text               c_w.l(rt_heap_descriptor_twolibspace.o)
    0x000002fc   0x000002fc   0x00000004   Code   RO          904    .ARM.__at_0x02FC    startup_lpc17xx.o
    0x00000300   0x00000300   0x0000009e   Code   RO         1439    .text               c_w.l(h1_alloc_mt.o)
    0x0000039e   0x0000039e   0x00000076   Code   RO         1441    .text               c_w.l(h1_free_mt.o)
    0x00000414   0x00000414   0x00000068   Code   RO         1503    .text               c_w.l(__printf.o)
    0x0000047c   0x0000047c   0x0000003c   Code   RO         1530    .text               c_w.l(rand.o)
    0x000004b8   0x000004b8   0x0000008a   Code   RO         1534    .text               c_w.l(rt_memcpy_v6.o)
    0x00000542   0x00000542   0x00000064   Code   RO         1536    .text               c_w.l(rt_memcpy_w.o)
    0x000005a6   0x000005a6   0x00000044   Code   RO         1538    .text               c_w.l(rt_memclr.o)
    0x000005ea   0x000005ea   0x0000004e   Code   RO         1540    .text               c_w.l(rt_memclr_w.o)
    0x00000638   0x00000638   0x00000004   Code   RO         1558    .text               c_w.l(hguard.o)
    0x0000063c   0x0000063c   0x0000008a   Code   RO         1560    .text               c_w.l(init_alloc.o)
    0x000006c6   0x000006c6   0x00000012   Code   RO         1566    .text               c_w.l(h1_init_mt.o)
    0x000006d8   0x000006d8   0x00000030   Code   RO         1580    .text               c_w.l(_printf_char_common.o)
    0x00000708   0x00000708   0x0000000a   Code   RO         1582    .text               c_w.l(_sputc.o)
    0x00000712   0x00000712   0x00000002   PAD
    0x00000714   0x00000714   0x00000024   Code   RO         1584    .text               c_w.l(_printf_char_file.o)
    0x00000738   0x00000738   0x00000008   Code   RO         1636    .text               c_w.l(libspace.o)
    0x00000740   0x00000740   0x0000003e   Code   RO         1662    .text               c_w.l(h1_extend_mt.o)
    0x0000077e   0x0000077e   0x0000000e   Code   RO         1666    .text               c_w.l(defsig_rtmem_outer.o)
    0x0000078c   0x0000078c   0x0000004a   Code   RO         1680    .text               c_w.l(sys_stackheap_outer.o)
    0x000007d6   0x000007d6   0x00000010   Code   RO         1684    .text               c_w.l(term_alloc.o)
    0x000007e6   0x000007e6   0x00000012   Code   RO         1686    .text               c_w.l(exit.o)
    0x000007f8   0x000007f8   0x0000000a   Code   RO         1688    .text               c_w.l(defsig_exit.o)
    0x00000802   0x00000802   0x00000002   PAD
    0x00000804   0x00000804   0x00000050   Code   RO         1694    .text               c_w.l(defsig_rtmem_inner.o)
    0x00000854   0x00000854   0x0000000a   Code   RO         1708    .text               c_w.l(h1_final_mt.o)
    0x0000085e   0x0000085e   0x00000032   Code   RO         1712    .text               c_w.l(defsig_general.o)
    0x00000890   0x00000890   0x00000046   Code   RO         1411    .text.MessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x000008d6   0x000008d6   0x00000064   Code   RO         1405    .text.MessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x0000093a   0x0000093a   0x00000026   Code   RO         1403    .text.MessageQueueRemove  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000960   0x00000960   0x0000000c   Code   RO         1347    .text.OS_Tick_AcknowledgeIRQ  RTX_CM3.lib(os_systick.o)
    0x0000096c   0x0000096c   0x0000002c   Code   RO         1343    .text.OS_Tick_Enable  RTX_CM3.lib(os_systick.o)
    0x00000998   0x00000998   0x00000006   Code   RO         1349    .text.OS_Tick_GetIRQn  RTX_CM3.lib(os_systick.o)
    0x0000099e   0x0000099e   0x00000002   PAD
    0x000009a0   0x000009a0   0x00000040   Code   RO         1341    .text.OS_Tick_Setup  RTX_CM3.lib(os_systick.o)
    0x000009e0   0x000009e0   0x0000006a   Code   RO         1091    .text.ThreadFlagsCheck  RTX_CM3.lib(rtx_thread.o)
    0x00000a4a   0x00000a4a   0x00000002   PAD
    0x00000a4c   0x00000a4c   0x00000050   Code   RO         1225    .text.TimerInsert   RTX_CM3.lib(rtx_timer.o)
    0x00000a9c   0x00000a9c   0x00000024   Code   RO         1148    .text.osDelay       RTX_CM3.lib(rtx_delay.o)
    0x00000ac0   0x00000ac0   0x00000034   Code   RO          954    .text.osKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x00000af4   0x00000af4   0x00000024   Code   RO          948    .text.osKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x00000b18   0x00000b18   0x00000024   Code   RO          958    .text.osKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x00000b3c   0x00000b3c   0x00000070   Code   RO         1377    .text.osMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000bac   0x00000bac   0x00000024   Code   RO         1371    .text.osMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000bd0   0x00000bd0   0x00000080   Code   RO         1375    .text.osMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000c50   0x00000c50   0x00000024   Code   RO         1173    .text.osMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x00000c74   0x00000c74   0x00000024   Code   RO         1179    .text.osMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x00000c98   0x00000c98   0x00000024   Code   RO         1169    .text.osMutexNew    RTX_CM3.lib(rtx_mutex.o)
    0x00000cbc   0x00000cbc   0x00000024   Code   RO         1175    .text.osMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x00000ce0   0x00000ce0   0x00000080   Code   RO         1254    .text.osRtxMemoryAlloc  RTX_CM3.lib(rtx_memory.o)
    0x00000d60   0x00000d60   0x00000052   Code   RO         1256    .text.osRtxMemoryFree  RTX_CM3.lib(rtx_memory.o)
    0x00000db2   0x00000db2   0x00000036   Code   RO         1252    .text.osRtxMemoryInit  RTX_CM3.lib(rtx_memory.o)
    0x00000de8   0x00000de8   0x0000004a   Code   RO         1271    .text.osRtxMemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x00000e32   0x00000e32   0x00000056   Code   RO         1273    .text.osRtxMemoryPoolFree  RTX_CM3.lib(rtx_mempool.o)
    0x00000e88   0x00000e88   0x00000054   Code   RO         1269    .text.osRtxMemoryPoolInit  RTX_CM3.lib(rtx_mempool.o)
    0x00000edc   0x00000edc   0x000000d6   Code   RO         1401    .text.osRtxMessageQueuePostProcess  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000fb2   0x00000fb2   0x00000044   Code   RO         1167    .text.osRtxMutexOwnerRelease  RTX_CM3.lib(rtx_mutex.o)
    0x00000ff6   0x00000ff6   0x00000002   PAD
    0x00000ff8   0x00000ff8   0x00000090   Code   RO         1326    .text.osRtxPendSV_Handler  RTX_CM3.lib(rtx_system.o)
    0x00001088   0x00001088   0x00000074   Code   RO         1328    .text.osRtxPostProcess  RTX_CM3.lib(rtx_system.o)
    0x000010fc   0x000010fc   0x00000038   Code   RO         1033    .text.osRtxThreadBlock  RTX_CM3.lib(rtx_thread.o)
    0x00001134   0x00001134   0x00000094   Code   RO         1041    .text.osRtxThreadDelayInsert  RTX_CM3.lib(rtx_thread.o)
    0x000011c8   0x000011c8   0x00000058   Code   RO         1037    .text.osRtxThreadDelayRemove  RTX_CM3.lib(rtx_thread.o)
    0x00001220   0x00001220   0x00000038   Code   RO         1023    .text.osRtxThreadDelayTick  RTX_CM3.lib(rtx_thread.o)
    0x00001258   0x00001258   0x00000060   Code   RO         1031    .text.osRtxThreadDispatch  RTX_CM3.lib(rtx_thread.o)
    0x000012b8   0x000012b8   0x00000058   Code   RO         1117    .text.osRtxThreadFree  RTX_CM3.lib(rtx_thread.o)
    0x00001310   0x00001310   0x00000016   Code   RO         1015    .text.osRtxThreadListGet  RTX_CM3.lib(rtx_thread.o)
    0x00001326   0x00001326   0x00000038   Code   RO         1013    .text.osRtxThreadListPut  RTX_CM3.lib(rtx_thread.o)
    0x0000135e   0x0000135e   0x00000014   Code   RO         1019    .text.osRtxThreadListRemove  RTX_CM3.lib(rtx_thread.o)
    0x00001372   0x00001372   0x00000028   Code   RO         1017    .text.osRtxThreadListSort  RTX_CM3.lib(rtx_thread.o)
    0x0000139a   0x0000139a   0x0000002a   Code   RO         1089    .text.osRtxThreadPostProcess  RTX_CM3.lib(rtx_thread.o)
    0x000013c4   0x000013c4   0x00000014   Code   RO         1021    .text.osRtxThreadReadyPut  RTX_CM3.lib(rtx_thread.o)
    0x000013d8   0x000013d8   0x00000006   Code   RO         1025    .text.osRtxThreadRegPtr  RTX_CM3.lib(rtx_thread.o)
    0x000013de   0x000013de   0x00000002   PAD
    0x000013e0   0x000013e0   0x00000028   Code   RO         1029    .text.osRtxThreadStackCheck  RTX_CM3.lib(rtx_thread.o)
    0x00001408   0x00001408   0x00000058   Code   RO         1043    .text.osRtxThreadStartup  RTX_CM3.lib(rtx_thread.o)
    0x00001460   0x00001460   0x00000010   Code   RO         1027    .text.osRtxThreadSwitch  RTX_CM3.lib(rtx_thread.o)
    0x00001470   0x00001470   0x00000038   Code   RO         1039    .text.osRtxThreadWaitEnter  RTX_CM3.lib(rtx_thread.o)
    0x000014a8   0x000014a8   0x00000024   Code   RO         1035    .text.osRtxThreadWaitExit  RTX_CM3.lib(rtx_thread.o)
    0x000014cc   0x000014cc   0x00000070   Code   RO         1324    .text.osRtxTick_Handler  RTX_CM3.lib(rtx_system.o)
    0x0000153c   0x0000153c   0x00000044   Code   RO         1209    .text.osRtxTimerThread  RTX_CM3.lib(rtx_timer.o)
    0x00001580   0x00001580   0x00000058   Code   RO         1211    .text.osRtxTimerTick  RTX_CM3.lib(rtx_timer.o)
    0x000015d8   0x000015d8   0x0000000c   Code   RO         1073    .text.osThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x000015e4   0x000015e4   0x00000024   Code   RO         1047    .text.osThreadNew   RTX_CM3.lib(rtx_thread.o)
    0x00001608   0x00001608   0x00000024   Code   RO         1063    .text.osThreadYield  RTX_CM3.lib(rtx_thread.o)
    0x0000162c   0x0000162c   0x00000014   Code   RO         1152    .text.svcRtxDelay   RTX_CM3.lib(rtx_delay.o)
    0x00001640   0x00001640   0x0000000c   Code   RO          956    .text.svcRtxKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x0000164c   0x0000164c   0x00000178   Code   RO          986    .text.svcRtxKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x000017c4   0x000017c4   0x0000008c   Code   RO          988    .text.svcRtxKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x00001850   0x00001850   0x000000f0   Code   RO         1413    .text.svcRtxMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x00001940   0x00001940   0x00000138   Code   RO         1399    .text.svcRtxMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x00001a78   0x00001a78   0x000000c8   Code   RO         1409    .text.svcRtxMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x00001b40   0x00001b40   0x00000098   Code   RO         1185    .text.svcRtxMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x00001bd8   0x00001bd8   0x000000d4   Code   RO         1191    .text.svcRtxMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x00001cac   0x00001cac   0x0000006c   Code   RO         1181    .text.svcRtxMutexNew  RTX_CM3.lib(rtx_mutex.o)
    0x00001d18   0x00001d18   0x000000bc   Code   RO         1187    .text.svcRtxMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x00001dd4   0x00001dd4   0x00000068   Code   RO         1121    .text.svcRtxThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x00001e3c   0x00001e3c   0x000001e0   Code   RO         1045    .text.svcRtxThreadNew  RTX_CM3.lib(rtx_thread.o)
    0x0000201c   0x0000201c   0x00000038   Code   RO         1107    .text.svcRtxThreadYield  RTX_CM3.lib(rtx_thread.o)
    0x00002054   0x00002054   0x00000006   Code   RO          395    i.Free              uart.o
    0x0000205a   0x0000205a   0x00000002   PAD
    0x0000205c   0x0000205c   0x00000024   Code   RO          396    i.FreeRcv           uart.o
    0x00002080   0x00002080   0x00000024   Code   RO          397    i.FreeSnd           uart.o
    0x000020a4   0x000020a4   0x0000002a   Code   RO          144    i.GLCD_Clear        glcd_spi_lpc1700.o
    0x000020ce   0x000020ce   0x00000002   PAD
    0x000020d0   0x000020d0   0x0000005c   Code   RO          146    i.GLCD_DisplayChar  glcd_spi_lpc1700.o
    0x0000212c   0x0000212c   0x00000028   Code   RO          147    i.GLCD_DisplayString  glcd_spi_lpc1700.o
    0x00002154   0x00002154   0x0000009c   Code   RO          148    i.GLCD_DrawChar     glcd_spi_lpc1700.o
    0x000021f0   0x000021f0   0x000005e8   Code   RO          149    i.GLCD_Init         glcd_spi_lpc1700.o
    0x000027d8   0x000027d8   0x00000080   Code   RO          150    i.GLCD_PutPixel     glcd_spi_lpc1700.o
    0x00002858   0x00002858   0x0000000c   Code   RO          153    i.GLCD_SetTextColor  glcd_spi_lpc1700.o
    0x00002864   0x00002864   0x000000ac   Code   RO          154    i.GLCD_SetWindow    glcd_spi_lpc1700.o
    0x00002910   0x00002910   0x00000012   Code   RO          155    i.GLCD_WindowMax    glcd_spi_lpc1700.o
    0x00002922   0x00002922   0x00000002   PAD
    0x00002924   0x00002924   0x00000140   Code   RO          915    i.SystemInit        system_lpc17xx.o
    0x00002a64   0x00002a64   0x00000068   Code   RO          401    i.UART0_IRQHandler  uart.o
    0x00002acc   0x00002acc   0x00000070   Code   RO          402    i.UART1_IRQHandler  uart.o
    0x00002b3c   0x00002b3c   0x000000bc   Code   RO          403    i.UARTInit          uart.o
    0x00002bf8   0x00002bf8   0x00000024   Code   RO          407    i.UARTSendChar      uart.o
    0x00002c1c   0x00002c1c   0x0000001a   Code   RO          408    i.__NVIC_EnableIRQ  uart.o
    0x00002c36   0x00002c36   0x00000016   Code   RO          787    i._mutex_acquire    rtx_lib.o
    0x00002c4c   0x00002c4c   0x0000000c   Code   RO          788    i._mutex_free       rtx_lib.o
    0x00002c58   0x00002c58   0x00000022   Code   RO          789    i._mutex_initialize  rtx_lib.o
    0x00002c7a   0x00002c7a   0x00000012   Code   RO          790    i._mutex_release    rtx_lib.o
    0x00002c8c   0x00002c8c   0x00000008   Code   RO          791    i._platform_post_stackheap_init  rtx_lib.o
    0x00002c94   0x00002c94   0x00000004   Code   RO          328    i._sys_exit         retarget.o
    0x00002c98   0x00002c98   0x0000000c   Code   RO          329    i._ttywrch          retarget.o
    0x00002ca4   0x00002ca4   0x00000030   Code   RO          668    i.appleEaten        game_logic.o
    0x00002cd4   0x00002cd4   0x0000002c   Code   RO          669    i.checkTailForApple  game_logic.o
    0x00002d00   0x00002d00   0x0000001e   Code   RO          589    i.clearList         linked_list.o
    0x00002d1e   0x00002d1e   0x00000002   PAD
    0x00002d20   0x00002d20   0x00000048   Code   RO          670    i.collisionDetected  game_logic.o
    0x00002d68   0x00002d68   0x0000000e   Code   RO          158    i.delay             glcd_spi_lpc1700.o
    0x00002d76   0x00002d76   0x0000001a   Code   RO          590    i.dequeue           linked_list.o
    0x00002d90   0x00002d90   0x00000068   Code   RO          509    i.displayScore      main.o
    0x00002df8   0x00002df8   0x00000070   Code   RO          748    i.displayScoreWithLed  peripherals.o
    0x00002e68   0x00002e68   0x0000006c   Code   RO          634    i.drawBorder        glcd_render.o
    0x00002ed4   0x00002ed4   0x0000001c   Code   RO          635    i.drawSnakeBody     glcd_render.o
    0x00002ef0   0x00002ef0   0x00000080   Code   RO          636    i.drawStaticScreen  glcd_render.o
    0x00002f70   0x00002f70   0x00000008   Code   RO          330    i.ferror            retarget.o
    0x00002f78   0x00002f78   0x0000000e   Code   RO          332    i.fputc             retarget.o
    0x00002f86   0x00002f86   0x00000008   Code   RO          671    i.gameOver          game_logic.o
    0x00002f8e   0x00002f8e   0x00000048   Code   RO          672    i.generateApplePosition  game_logic.o
    0x00002fd6   0x00002fd6   0x00000002   PAD
    0x00002fd8   0x00002fd8   0x00000050   Code   RO          510    i.getButtonInput    main.o
    0x00003028   0x00003028   0x00000048   Code   RO          409    i.getFrequency      uart.o
    0x00003070   0x00003070   0x0000002c   Code   RO          511    i.getJoyStickInput  main.o
    0x0000309c   0x0000309c   0x00000114   Code   RO          673    i.initGameLogic     game_logic.o
    0x000031b0   0x000031b0   0x00000034   Code   RO          749    i.joystickDirection  peripherals.o
    0x000031e4   0x000031e4   0x000000b0   Code   RO          512    i.main              main.o
    0x00003294   0x00003294   0x00000060   Code   RO          674    i.moveSnakeBody     game_logic.o
    0x000032f4   0x000032f4   0x00000040   Code   RO          675    i.moveSnakeHead     game_logic.o
    0x00003334   0x00003334   0x00000020   Code   RO          870    i.osRtxErrorNotify  rtx_config.o
    0x00003354   0x00003354   0x00000004   Code   RO          871    i.osRtxIdleThread   rtx_config.o
    0x00003358   0x00003358   0x00000020   Code   RO          792    i.os_kernel_is_active  rtx_lib.o
    0x00003378   0x00003378   0x00000016   Code   RO          593    i.pushEnd           linked_list.o
    0x0000338e   0x0000338e   0x00000016   Code   RO          594    i.pushFront         linked_list.o
    0x000033a4   0x000033a4   0x00000060   Code   RO          676    i.putApple          game_logic.o
    0x00003404   0x00003404   0x0000003c   Code   RO          637    i.putPixel          glcd_render.o
    0x00003440   0x00003440   0x0000008c   Code   RO          159    i.rd_id_man         glcd_spi_lpc1700.o
    0x000034cc   0x000034cc   0x00000048   Code   RO          160    i.rd_reg            glcd_spi_lpc1700.o
    0x00003514   0x00003514   0x00000070   Code   RO          513    i.render            main.o
    0x00003584   0x00003584   0x00000044   Code   RO          334    i.sendchar          retarget.o
    0x000035c8   0x000035c8   0x0000007c   Code   RO          677    i.setVelocity       game_logic.o
    0x00003644   0x00003644   0x00000020   Code   RO          161    i.spi_tran          glcd_spi_lpc1700.o
    0x00003664   0x00003664   0x00000080   Code   RO          162    i.spi_tran_man      glcd_spi_lpc1700.o
    0x000036e4   0x000036e4   0x00000060   Code   RO          514    i.staticScreen      main.o
    0x00003744   0x00003744   0x00000028   Code   RO          163    i.wr_cmd            glcd_spi_lpc1700.o
    0x0000376c   0x0000376c   0x00000028   Code   RO          164    i.wr_dat            glcd_spi_lpc1700.o
    0x00003794   0x00003794   0x00000012   Code   RO          165    i.wr_dat_only       glcd_spi_lpc1700.o
    0x000037a6   0x000037a6   0x00000002   PAD
    0x000037a8   0x000037a8   0x00000014   Code   RO          166    i.wr_dat_start      glcd_spi_lpc1700.o
    0x000037bc   0x000037bc   0x0000000c   Code   RO          167    i.wr_dat_stop       glcd_spi_lpc1700.o
    0x000037c8   0x000037c8   0x00000014   Code   RO          168    i.wr_reg            glcd_spi_lpc1700.o
    0x000037dc   0x000037dc   0x00001880   Data   RO          169    .constdata          glcd_spi_lpc1700.o
    0x0000505c   0x0000505c   0x00000004   Data   RO          678    .constdata          game_logic.o
    0x00005060   0x00005060   0x00000024   Data   RO          750    .constdata          peripherals.o
    0x00005084   0x00005084   0x00000064   Data   RO          799    .constdata          rtx_lib.o
    0x000050e8   0x000050e8   0x00000001   Data   RO         1203    .constdata          RTX_CM3.lib(irq_cm3.o)
    0x000050e9   0x000050e9   0x00000003   PAD
    0x000050ec   0x000050ec   0x00000068   Data   RO          801    .rodata             rtx_lib.o
    0x00005154   0x00005154   0x0000000b   Data   RO         1000    .rodata.str1.4      RTX_CM3.lib(rtx_kernel.o)
    0x0000515f   0x0000515f   0x00000001   PAD
    0x00005160   0x00005160   0x00000020   Data   RO         1758    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x10000000, Load base: 0x00005180, Size: 0x00001480, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x0000004c])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10000000   COMPRESSED   0x00001040   Data   RW          793    .bss.os             rtx_lib.o
    0x10001040   COMPRESSED   0x00000034   Data   RW          795    .bss.os.msgqueue.cb  rtx_lib.o
    0x10001074   COMPRESSED   0x00000050   Data   RW          796    .bss.os.msgqueue.mem  rtx_lib.o
    0x100010c4   COMPRESSED   0x00000088   Data   RW          797    .bss.os.thread.cb   rtx_lib.o
    0x1000114c   COMPRESSED   0x00000004   PAD
    0x10001150   COMPRESSED   0x00000200   Data   RW          798    .bss.os.thread.stack  rtx_lib.o
    0x10001350   COMPRESSED   0x00000005   Data   RW          170    .data               glcd_spi_lpc1700.o
    0x10001355   COMPRESSED   0x00000003   PAD
    0x10001358   COMPRESSED   0x0000000c   Data   RW          335    .data               retarget.o
    0x10001364   COMPRESSED   0x00000020   Data   RW          411    .data               uart.o
    0x10001384   COMPRESSED   0x00000028   Data   RW          515    .data               main.o
    0x100013ac   COMPRESSED   0x00000024   Data   RW          679    .data               game_logic.o
    0x100013d0   COMPRESSED   0x00000005   Data   RW          800    .data               rtx_lib.o
    0x100013d5   COMPRESSED   0x00000003   PAD
    0x100013d8   COMPRESSED   0x00000004   Data   RW          916    .data               system_lpc17xx.o
    0x100013dc   COMPRESSED   0x000000a4   Data   RW         1001    .data.os            RTX_CM3.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x10001480, Load base: 0x000051cc, Size: 0x000041c8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10001480        -       0x00000080   Zero   RW          410    .bss                uart.o
    0x10001500        -       0x000000e4   Zero   RW         1531    .bss                c_w.l(rand.o)
    0x100015e4        -       0x00000060   Zero   RW         1637    .bss                c_w.l(libspace.o)
    0x10001644        -       0x00000001   Zero   RW         1359    .bss.PendST         RTX_CM3.lib(os_systick.o)
    0x10001645   0x000051cc   0x00000003   PAD
    0x10001648        -       0x00002000   Zero   RW          902    HEAP                startup_lpc17xx.o
    0x10003648        -       0x00002000   Zero   RW          901    STACK               startup_lpc17xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       900        124          4         36          0       5974   game_logic.o
       324         50          0          0          0       2451   glcd_render.o
         0          0          0          0          0       4556   glcd_scroll.o
      2708         98       6272          5          0      29845   glcd_spi_lpc1700.o
       100          0          0          0          0       2560   linked_list.o
       612        146          0         40          0       6629   main.o
       164         14         36          0          0       1118   peripherals.o
       106          4          0         12          0       4066   retarget.o
        36          6          0          0          0        925   rtx_config.o
       126          4        204       4945          0      11959   rtx_lib.o
        68         30        204          0      16384        964   startup_lpc17xx.o
       320         18          0          4          0        771   system_lpc17xx.o
       616         86          0         32        128      32215   uart.o

    ----------------------------------------------------------------------
      6092        580       6752       5084      16512     104033   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        12          0          0         10          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       148         10          1          0          0        488   irq_cm3.o
       126         32          0          0          1       3575   os_systick.o
        56          4          0          0          0       3088   rtx_delay.o
       652         48         11        164          0      18714   rtx_kernel.o
       264          0          0          0          0       2707   rtx_memory.o
       244          0          0          0          0      15835   rtx_mempool.o
      1450         28          0          0          0      18606   rtx_msgqueue.o
       872         32          0          0          0      10258   rtx_mutex.o
       372         24          0          0          0       5544   rtx_system.o
      1804        100          0          0          0      33794   rtx_thread.o
       236         20          0          0          0      10983   rtx_timer.o
        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
       104          0          0          0          0         84   __printf.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        48          6          0          0          0         96   _printf_char_common.o
        36          4          0          0          0         80   _printf_char_file.o
         0          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
        10          0          0          0          0         68   _sputc.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        18          0          0          0          0         80   exit.o
       158          0          0          0          0        128   h1_alloc_mt.o
        62          0          0          0          0         80   h1_extend_mt.o
        10          0          0          0          0         76   h1_final_mt.o
       118          0          0          0          0        108   h1_free_mt.o
        18          0          0          0          0         84   h1_init_mt.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
       138          0          0          0          0        168   init_alloc.o
         2          0          0          0          0          0   libinit.o
        14          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         6          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
         0          0          0          0          0          0   maybetermalloc2.o
        24          4          0          0          0         84   noretval__2printf.o
        40          6          0          0          0         84   noretval__2sprintf.o
       112         18          0          0        228        160   rand.o
        10          0          0          0          0         76   rt_heap_descriptor_twolibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        16          0          0          0          0         80   term_alloc.o

    ----------------------------------------------------------------------
      8004        406         16        164        328     126240   Library Totals
        16          0          4          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      6224        298         12        164          1     123592   RTX_CM3.lib
      1764        108          0          0        324       2648   c_w.l

    ----------------------------------------------------------------------
      8004        406         16        164        328     126240   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     14096        986       6768       5248      16840     225289   Grand Totals
     14096        986       6768         76      16840     225289   ELF Image Totals (compressed)
     14096        986       6768         76          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                20864 (  20.38kB)
    Total RW  Size (RW Data + ZI Data)             22088 (  21.57kB)
    Total ROM Size (Code + RO Data + RW Data)      20940 (  20.45kB)

==============================================================================

